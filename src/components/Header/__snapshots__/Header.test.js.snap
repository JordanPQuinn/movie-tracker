// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    signOut={[Function]}
    user={
        Object {
            "email": "tink@gmail.com",
            "name": "TinkerBell",
            "password": "password",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Link
          className="title-cont"
          replace={false}
          to="/"
>
          <img
                    alt="logo"
                    className="logo"
                    src="video-camera.svg"
          />
          <h1>
                    Movie
                    <span
                              className="title"
                    >
                              Tracker
                    </span>
          </h1>
</Link>,
        <div
          className="menu-mobile"
>
          <i
                    className="fas fa-bars"
                    id="menu"
          />
          <div
                    className="user-signed-in"
          >
                    <h2>
                              Hello, 
                              <span>
                                        TinkerBell
                              </span>
                    </h2>
                    <Link
                              className="user-link"
                              replace={false}
                              to="/favorites"
                    >
                              Favorites
                    </Link>
                    <Link
                              className="user-link"
                              id="sign-out"
                              onClick={[Function]}
                              replace={false}
                              to="/"
                    >
                              Sign Out
                    </Link>
          </div>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <img
              alt="logo"
              className="logo"
              src="video-camera.svg"
/>,
            <h1>
              Movie
              <span
                            className="title"
              >
                            Tracker
              </span>
</h1>,
          ],
          "className": "title-cont",
          "replace": false,
          "to": "/",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "className": "logo",
              "src": "video-camera.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Movie",
                <span
                  className="title"
>
                  Tracker
</span>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Movie",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tracker",
                  "className": "title",
                },
                "ref": null,
                "rendered": "Tracker",
                "type": "span",
              },
            ],
            "type": "h1",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fas fa-bars"
              id="menu"
/>,
            <div
              className="user-signed-in"
>
              <h2>
                            Hello, 
                            <span>
                                          TinkerBell
                            </span>
              </h2>
              <Link
                            className="user-link"
                            replace={false}
                            to="/favorites"
              >
                            Favorites
              </Link>
              <Link
                            className="user-link"
                            id="sign-out"
                            onClick={[Function]}
                            replace={false}
                            to="/"
              >
                            Sign Out
              </Link>
</div>,
          ],
          "className": "menu-mobile",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fas fa-bars",
              "id": "menu",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h2>
                  Hello, 
                  <span>
                                    TinkerBell
                  </span>
</h2>,
                <Link
                  className="user-link"
                  replace={false}
                  to="/favorites"
>
                  Favorites
</Link>,
                <Link
                  className="user-link"
                  id="sign-out"
                  onClick={[Function]}
                  replace={false}
                  to="/"
>
                  Sign Out
</Link>,
              ],
              "className": "user-signed-in",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Hello, ",
                    <span>
                      TinkerBell
</span>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Hello, ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "TinkerBell",
                    },
                    "ref": null,
                    "rendered": "TinkerBell",
                    "type": "span",
                  },
                ],
                "type": "h2",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Favorites",
                  "className": "user-link",
                  "replace": false,
                  "to": "/favorites",
                },
                "ref": null,
                "rendered": "Favorites",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sign Out",
                  "className": "user-link",
                  "id": "sign-out",
                  "onClick": [Function],
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Sign Out",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Link
            className="title-cont"
            replace={false}
            to="/"
>
            <img
                        alt="logo"
                        className="logo"
                        src="video-camera.svg"
            />
            <h1>
                        Movie
                        <span
                                    className="title"
                        >
                                    Tracker
                        </span>
            </h1>
</Link>,
          <div
            className="menu-mobile"
>
            <i
                        className="fas fa-bars"
                        id="menu"
            />
            <div
                        className="user-signed-in"
            >
                        <h2>
                                    Hello, 
                                    <span>
                                                TinkerBell
                                    </span>
                        </h2>
                        <Link
                                    className="user-link"
                                    replace={false}
                                    to="/favorites"
                        >
                                    Favorites
                        </Link>
                        <Link
                                    className="user-link"
                                    id="sign-out"
                                    onClick={[Function]}
                                    replace={false}
                                    to="/"
                        >
                                    Sign Out
                        </Link>
            </div>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <img
                alt="logo"
                className="logo"
                src="video-camera.svg"
/>,
              <h1>
                Movie
                <span
                                className="title"
                >
                                Tracker
                </span>
</h1>,
            ],
            "className": "title-cont",
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "className": "logo",
                "src": "video-camera.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Movie",
                  <span
                    className="title"
>
                    Tracker
</span>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "Movie",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tracker",
                    "className": "title",
                  },
                  "ref": null,
                  "rendered": "Tracker",
                  "type": "span",
                },
              ],
              "type": "h1",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fas fa-bars"
                id="menu"
/>,
              <div
                className="user-signed-in"
>
                <h2>
                                Hello, 
                                <span>
                                                TinkerBell
                                </span>
                </h2>
                <Link
                                className="user-link"
                                replace={false}
                                to="/favorites"
                >
                                Favorites
                </Link>
                <Link
                                className="user-link"
                                id="sign-out"
                                onClick={[Function]}
                                replace={false}
                                to="/"
                >
                                Sign Out
                </Link>
</div>,
            ],
            "className": "menu-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fas fa-bars",
                "id": "menu",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h2>
                    Hello, 
                    <span>
                                        TinkerBell
                    </span>
</h2>,
                  <Link
                    className="user-link"
                    replace={false}
                    to="/favorites"
>
                    Favorites
</Link>,
                  <Link
                    className="user-link"
                    id="sign-out"
                    onClick={[Function]}
                    replace={false}
                    to="/"
>
                    Sign Out
</Link>,
                ],
                "className": "user-signed-in",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Hello, ",
                      <span>
                        TinkerBell
</span>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "Hello, ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "TinkerBell",
                      },
                      "ref": null,
                      "rendered": "TinkerBell",
                      "type": "span",
                    },
                  ],
                  "type": "h2",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Favorites",
                    "className": "user-link",
                    "replace": false,
                    "to": "/favorites",
                  },
                  "ref": null,
                  "rendered": "Favorites",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign Out",
                    "className": "user-link",
                    "id": "sign-out",
                    "onClick": [Function],
                    "replace": false,
                    "to": "/",
                  },
                  "ref": null,
                  "rendered": "Sign Out",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
